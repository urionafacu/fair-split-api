name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ruff:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff auto-fix and format
        run: |
          ruff check --fix .
          ruff format .

      - name: Commit and push changes if needed
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add .
            git commit -m "style: auto fixes from ruff [skip ci]"
            git push
          fi

      - name: Fail if there are still lint errors
        run: ruff check .

  test:
    runs-on: ubuntu-latest
    needs: ruff

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: fairsplit
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=5

    env:
      DJANGO_ENV: test
      DJANGO_SETTINGS_MODULE: core.settings.test
      POSTGRES_DB: fairsplit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      # Agrega aqu√≠ otras variables necesarias

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for DB
        run: |
          until pg_isready -h localhost -U postgres; do
            sleep 1
          done

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: pytest
